<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alex Day</title>
    <link>/</link>
    <description>Recent content on Alex Day</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2020 Alex Day</copyright>
    <lastBuildDate>Sun, 12 Apr 2020 15:35:54 -0400</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Emacs for Email</title>
      <link>/posts/emacs-for-email/</link>
      <pubDate>Sun, 12 Apr 2020 15:35:54 -0400</pubDate>
      
      <guid>/posts/emacs-for-email/</guid>
      <description>Email management, when heavily abstracted, is simple. To start reading email offline on your own PC you need three programs:    Sync email to/from IMAP server (OfflineIMAP)    Manage email on your PC (mu and mu4e)    Send email (msmtp)    Once these three parts are working together then email can be downloaded, viewed, and replied to. Getting these programs working is no easy task, however.</description>
    </item>
    
    <item>
      <title>&#34;Clemson Acceptance&#34;</title>
      <link>/news/clemson-acceptance/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/news/clemson-acceptance/</guid>
      <description>Accepted into Clemson University&amp;#39;s computer science PhD program.</description>
    </item>
    
    <item>
      <title>Emoji Summarization</title>
      <link>/projects/emoji/</link>
      <pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/projects/emoji/</guid>
      <description>For my senior year capstone project at Clarion University I worked with another student to try and summarize sentences by producing a string of emojis. We accomplished this goal through the use of vector embeddings. Both the initial and final algorithms are explained in blog posts, as well as a novel sentence segmentation algorithm that was developed as a consequence of the project. We presented this project at the Penn York conference(slides, abstract) in Clarion and published a paper at the 2020 PACISE conference.</description>
    </item>
    
    <item>
      <title>Undergraduate Graduated</title>
      <link>/news/clarion-graduation/</link>
      <pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/news/clarion-graduation/</guid>
      <description>Graduated cum laude from Clarion University with a B.S. in computer science and a minor in chemistry.</description>
    </item>
    
    <item>
      <title>Dependency Tree Collapse for N-Gram Generation</title>
      <link>/posts/dependency-tree-collapse/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/dependency-tree-collapse/</guid>
      <description>Introduction   Throughout the past semester I have been working on my senior capstone project for my CS undergraduate. The project is to create Emoji summaries for sentences and one of the integral parts of this algorithm is separating a sentence into a sequence of n-grams that represent it. In the initial algorithm, I took a naive approach of generating every single combination of n-grams, summarizing them all, and then returning the summary with the highest result.</description>
    </item>
    
    <item>
      <title>Animations</title>
      <link>/projects/animations/</link>
      <pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/projects/animations/</guid>
      <description>Constellations   This is animation is based on the animation found here. However, I wrote this program as an excuse to try out TypeScript so I made it object oriented instead of trying to do it in as few lines as possible. Check it out on GitHub. Collatz Conjecture Visualized   This is my take on the Coding Train&amp;#39;s Coding in the Cabana Collatz Conjecture. My version is using Python and the Python P5 library.</description>
    </item>
    
    <item>
      <title>Naive Sentence to Emoji Translation</title>
      <link>/posts/naive-emoji-summarization/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/naive-emoji-summarization/</guid>
      <description>Motivation   My senior capstone project for my computer science degree is research focused on summarizing sentences. My group mate and I decided to try and accomplish this by converting sentences into Emoji. We think that this will produce a more information-dense string. This problem is rather similar to a plethora of different problems in computer science and other, unrelated, domains. Within computer science, it is adjacent to the Emoji prediction and Emoji embedding problems.</description>
    </item>
    
    <item>
      <title>Bankers Algorithm</title>
      <link>/projects/bankers/</link>
      <pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/projects/bankers/</guid>
      <description>Banker&amp;#39;s Algorithm implemented in Python3 with a Flask RESTful backend and HTML/Bootstrap/JS front end. The site is hosted on Heroku at bankers.alexday.me. Usage   This was a project for the Operating Systems class at Clarion. This project had a specific input file format that is shown on the left hand side of the web app. This format is also shown with comments describing what each line corresponds to below.</description>
    </item>
    
    <item>
      <title>DSML 4 Kidz</title>
      <link>/projects/dsml/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/projects/dsml/</guid>
      <description>In the summer of 2019 I was lucky enough to be accepted into the University of Arizona&amp;#39;s CATVehicle REU. Over the course of 10 weeks my group mates and I developed a Domain Specific Modeling Language (DSML) aimed at providing a simple interface for 4th grade students to interact with an autonomous vehicle. This language was used to augment a robotics curriculum for over 420 students in the Tucson area.</description>
    </item>
    
    <item>
      <title>TF-IDF and Document Summarization</title>
      <link>/posts/tf-idf/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/tf-idf/</guid>
      <description>Term Frequency-Inverse Document Frequency (commonly abbreviated as TF-IDF) is a formula commonly used in Natural Language Processing (NLP) to determine the relative importance of a word. The formula is comprised of two sub-formulas, term frequency and inverse document frequency. The basic assumption of this formula is that if a word appears more in one document and less in every other document in the corpus then it is very important to that specific document.</description>
    </item>
    
    <item>
      <title>All About Me</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>My name is Alex Day. I have a B.S. in computer science from Clarion University and I am currently planning on attending Clemson University in the Fall of 2020 for a Ph.D. in computer science with a focus on robotics. In the past I have involved myself in Natural Language Processing research at Clarion and Autonomous Vehicle research at the University of Arizona. In my free time I enjoy grappling and long walks on the beach.</description>
    </item>
    
    <item>
      <title>Oops, you are offline.</title>
      <link>/offline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/offline/</guid>
      <description> You should try to find some Internet to browse here </description>
    </item>
    
    <item>
      <title>Papers Published</title>
      <link>/papers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/papers/</guid>
      <description>code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;} ul.task-list{list-style: none;}    Day, Alex, Chris Mankos, Soo Kim, and Jody Strausser. 2020. “CoNFET: An English Sentence to Emojis Translation Algorithm.” In Proceedings of the 35th Annual Spring Conference of the Pennsylvania Computer and Information Science Educators. Pennsylvania Computer Information Science Educators. Forthcoming [code] [pdf]
 Day, Alex, and Soo Kim.</description>
    </item>
    
    <item>
      <title>Talks I&#39;ve Given</title>
      <link>/talks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/talks/</guid>
      <description>code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;} ul.task-list{list-style: none;}    Day, Alex, Chris Mankos, Soo Kim, and Jody Strausser. November 2019. “Sentence Compression Using Emoji Summarization.” Penn-York Undergraduate Research Conference at Clarion University of Pennsylvania. [slides] [code]
 Hum, Sam, Day, Alex, and Wagner, Riley. August 2019. “Verification and Creation of Autonomous Vehicle Trajectories for Non-Experts with Reactive Design-Time Feedback and Sensor-Based Response.</description>
    </item>
    
  </channel>
</rss>